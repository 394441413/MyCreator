{"version":3,"sources":["../../../../../../assets/scripts/tools/encryptjs/assets/scripts/tools/encryptjs/base64.js"],"names":["root","factory","define","amd","module","exports","Base","Base64","_keyStr","prototype","encode","input","output","chr1","chr2","chr3","enc1","enc2","enc3","enc4","i","_utf8_encode","length","charCodeAt","isNaN","charAt","decode","replace","indexOf","String","fromCharCode","_utf8_decode","string","utftext","n","c","c1","c2","c3"],"mappings":"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","file":"base64.js","sourceRoot":"../../../../../../assets/scripts/tools/encryptjs","sourcesContent":["\n(function(root, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([], factory);\n  } else if (typeof module === \"object\" && module.exports) {\n    module.exports = factory();\n  } else {\n    root.Base = factory();\n  }\n}(this, function() {\n   'use strict';\n   \n    function Base64() {\n        // private property\n        this._keyStr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n    }\n    //public method for encoding\n    Base64.prototype.encode = function (input) {\n        var output = \"\", chr1, chr2, chr3, enc1, enc2, enc3, enc4, i = 0;\n        input = this._utf8_encode(input);\n        while (i < input.length) {\n            chr1 = input.charCodeAt(i++);\n            chr2 = input.charCodeAt(i++);\n            chr3 = input.charCodeAt(i++);\n            enc1 = chr1 >> 2;\n            enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n            enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n            enc4 = chr3 & 63;\n            if (isNaN(chr2)) {\n                enc3 = enc4 = 64;\n            } else if (isNaN(chr3)) {\n                enc4 = 64;\n            }\n            output = output +\n            this._keyStr.charAt(enc1) + this._keyStr.charAt(enc2) +\n            this._keyStr.charAt(enc3) + this._keyStr.charAt(enc4);\n        }\n        return output;\n    }\n\n    // public method for decoding\n    Base64.prototype.decode = function (input) {\n        var output = \"\", chr1, chr2, chr3, enc1, enc2, enc3, enc4, i = 0;\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n        while (i < input.length) {\n            enc1 = this._keyStr.indexOf(input.charAt(i++));\n            enc2 = this._keyStr.indexOf(input.charAt(i++));\n            enc3 = this._keyStr.indexOf(input.charAt(i++));\n            enc4 = this._keyStr.indexOf(input.charAt(i++));\n            chr1 = (enc1 << 2) | (enc2 >> 4);\n            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n            chr3 = ((enc3 & 3) << 6) | enc4;\n            output = output + String.fromCharCode(chr1);\n            if (enc3 != 64) {\n                output = output + String.fromCharCode(chr2);\n            }\n            if (enc4 != 64) {\n                output = output + String.fromCharCode(chr3);\n            }\n        }\n        output = this._utf8_decode(output);\n        return output;\n    }\n\n    // private method for UTF-8 encoding\n    Base64.prototype._utf8_encode = function (string) {\n        string = string.replace(/\\r\\n/g,\"\\n\");\n        var utftext = \"\";\n        for (var n = 0; n < string.length; n++) {\n            var c = string.charCodeAt(n);\n            if (c < 128) {\n                utftext += String.fromCharCode(c);\n            } else if((c > 127) && (c < 2048)) {\n                utftext += String.fromCharCode((c >> 6) | 192);\n                utftext += String.fromCharCode((c & 63) | 128);\n            } else {\n                utftext += String.fromCharCode((c >> 12) | 224);\n                utftext += String.fromCharCode(((c >> 6) & 63) | 128);\n                utftext += String.fromCharCode((c & 63) | 128);\n            }\n    \n        }\n        return utftext;\n    }\n\n    // private method for UTF-8 decoding\n    Base64.prototype._utf8_decode = function (utftext) {\n        var string = \"\", i = 0, c = 0, c1 = 0, c2 = 0, c3 = 0;\n        while ( i < utftext.length ) {\n            c = utftext.charCodeAt(i);\n            if (c < 128) {\n                string += String.fromCharCode(c);\n                i++;\n            } else if((c > 191) && (c < 224)) {\n                c2 = utftext.charCodeAt(i+1);\n                string += String.fromCharCode(((c & 31) << 6) | (c2 & 63));\n                i += 2;\n            } else {\n                c2 = utftext.charCodeAt(i+1);\n                c3 = utftext.charCodeAt(i+2);\n                string += String.fromCharCode(((c & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\n                i += 3;\n            }\n        }\n        return string;\n    }\n    \n    var Base = new Base64();\n    \n    return Base;\n}));\n"]}