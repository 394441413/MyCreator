{"version":3,"sources":["../../../../../assets/scripts/tools/assets/scripts/tools/EventManager.js"],"names":["handlerList","eventList","eventOpen","countNum","cc","Class","extends","Component","properties","frameEvent","default","tooltip","onLoad","EventManager","update","dt","_excuteEvent","i","j","eventName","func","target","msg","eventOff","eventOn","eventOnce","eventTrigger","args","closeEvent","startEvent","clearEvent"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA,IAAIA,cAAc,EAAlB;;AAEA;AACA;AACA;AACA,IAAIC,YAAY,EAAhB;;AAEA,IAAIC,YAAY,IAAhB;AACA,IAAIC,WAAW,CAAf;;AAGAC,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACRC,oBAAY;AACRC,qBAAS,IADD;AAERC,qBAAS;AAFD;AADJ,KAHP;;AAWLC,UAXK,oBAWI;AACLC,uBAAe,IAAf;AACH,KAbI;;;AAeLC,YAAQ,gBAAUC,EAAV,EAAc;AAClB,aAAKC,YAAL;AACH,KAjBI;;AAmBLA,kBAAc,wBAAY;AACtB,YAAId,aAAa,CAAC,KAAKO,UAAvB,EAAmC;AAC/B,iBAAK,IAAIQ,IAAI,CAAb,EAAgBA,IAAId,QAApB,EAA8Bc,GAA9B,EAAmC;AAC/B,qBAAK,IAAIC,CAAT,IAAcjB,SAAd,EAAyB;AACrB,wBAAIkB,YAAYnB,YAAYiB,CAAZ,EAAe,CAAf,CAAhB;AACA,wBAAIE,aAAaD,CAAjB,EAAoB;AAChB,4BAAIE,OAAOnB,UAAUkB,SAAV,EAAqB,CAArB,CAAX;AACA,4BAAIE,SAASpB,UAAUkB,SAAV,EAAqB,CAArB,CAAb;AACA,4BAAIG,MAAMtB,YAAYiB,CAAZ,EAAe,CAAf,CAAV;AACAI,+BAAOD,IAAP,EAAaE,GAAb;AACA,4BAAI,CAACrB,UAAUkB,SAAV,EAAqB,CAArB,CAAL,EAA8B;AAC1B,iCAAKI,QAAL,CAAcJ,SAAd;AACH;AACD;AACH;AACJ;AACJ;AACDhB,uBAAW,CAAX;AACAH,0BAAc,EAAd;AACH;AACJ,KAvCI;;AAyCL;AACAwB,aAAS,iBAAUL,SAAV,EAAqBC,IAArB,EAA2BC,MAA3B,EAAmC;AACxCpB,kBAAUkB,SAAV,IAAuB,CAACC,IAAD,EAAOC,MAAP,EAAe,IAAf,CAAvB;AACH,KA5CI;;AA8CL;AACAI,eAAW,mBAAUN,SAAV,EAAqBC,IAArB,EAA2BC,MAA3B,EAAmC;AAC1CpB,kBAAUkB,SAAV,IAAuB,CAACC,IAAD,EAAOC,MAAP,EAAe,KAAf,CAAvB;AACH,KAjDI;;AAmDL;AACAE,cAAU,kBAAUJ,SAAV,EAAqB;AAC3B,YAAGlB,UAAUkB,SAAV,CAAH,EAAwB;AACpB,mBAAQlB,UAAUkB,SAAV,CAAR;AACH;AACJ,KAxDI;;AA0DLO,kBAAc,sBAAUP,SAAV,EAAqBQ,IAArB,EAA2B;AACrC3B,oBAAYG,QAAZ,IAAwB,CAACgB,SAAD,EAAYQ,IAAZ,CAAxB;AACAxB;AACA,YAAGM,UAAH,EAAe;AACX,iBAAKO,YAAL;AACH;AACJ,KAhEI;;AAkELY,gBAAY,sBAAY;AACpB1B,oBAAY,KAAZ;AACH,KApEI;;AAsEL2B,gBAAY,sBAAY;AACpB3B,oBAAY,IAAZ;AACH,KAxEI;;AA0EL4B,gBAAY,sBAAY;AACpB3B,mBAAW,CAAX;AACAF,oBAAY,EAAZ;AACH;AA7EI,CAAT","file":"EventManager.js","sourceRoot":"../../../../../assets/scripts/tools","sourcesContent":["// looper\n// ----------------\n// |eventName|args|\n// ----------------\nvar handlerList = {};\n\n// ----------------------------------\n// |eventName|func|target|bool(once)|\n// ----------------------------------\nvar eventList = {};\n\nvar eventOpen = true;\nvar countNum = 0;\n\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        frameEvent: {\n            default: true,\n            tooltip: '是否在update执行事件',\n        }\n    },\n\n\n    onLoad() {\n        EventManager = this;\n    },\n\n    update: function (dt) {\n        this._excuteEvent();\n    },\n\n    _excuteEvent: function () {\n        if (eventOpen && !this.frameEvent) {\n            for (var i = 0; i < countNum; i++) {\n                for (var j in eventList) {\n                    var eventName = handlerList[i][0];\n                    if (eventName == j) {\n                        var func = eventList[eventName][0];\n                        var target = eventList[eventName][1];\n                        var msg = handlerList[i][1];\n                        target[func](msg);\n                        if (!eventList[eventName][2]) {\n                            this.eventOff(eventName);\n                        }\n                        break;\n                    }\n                }\n            }\n            countNum = 0;\n            handlerList = {};\n        }\n    },\n\n    //eventOn(\"event\",\"callbackFunc\",this);\n    eventOn: function (eventName, func, target) {\n        eventList[eventName] = [func, target, true];\n    },\n\n    //eventOnce(\"event\",\"callbackFunc\",this);\n    eventOnce: function (eventName, func, target) {\n        eventList[eventName] = [func, target, false];\n    },\n\n    //eventOff(\"eventName\");\n    eventOff: function (eventName) {\n        if(eventList[eventName]){\n            delete (eventList[eventName]);\n        }\n    },\n\n    eventTrigger: function (eventName, args) {\n        handlerList[countNum] = [eventName, args];\n        countNum++;\n        if(frameEvent) {\n            this._excuteEvent();\n        }\n    },\n\n    closeEvent: function () {\n        eventOpen = false;\n    },\n\n    startEvent: function () {\n        eventOpen = true;\n    },\n\n    clearEvent: function () {\n        countNum = 0;\n        eventList = {};\n    }\n});\n"]}