{"version":3,"sources":["utils.js"],"names":["encrypt","require","secretkey","module","exports","log","value","param","cc","loadUserData","key","cipherText","sys","localStorage","getItem","JSON","parse","decrypt","setUserData","dataString","stringify","encrypted","setItem","checkUserData","Utils","getTimestamp","Date","addShadow","preNode","diffX","diffY","isBrowser","lblBool","getComponent","Label","richBool","RichText","cloneNode","Node","type","addComponent","string","fontSize","parent","node","color","Color","BLACK","zIndex","setAnchorPoint","anchorX","anchorY","setPosition","x","y","generateUUID","d","getTime","uuid","replace","c","r","Math","random","floor","toString","captureScreen","width","height","CC_JSB","renderTexture","RenderTexture","create","begin","_sgNode","visit","end","saveToFile","ImageFormat","PNG"],"mappings":"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","file":"utils.js","sourceRoot":"../../../../../assets/scripts/tools","sourcesContent":["var encrypt = require('./encryptjs/encryptjs');\nvar secretkey = 'GameXX123';\n\n//通用方法\nmodule.exports = {\n\n    //打印log\n    log: function (value, param) {\n        param ? cc.log(value, param) : cc.log(value);\n    },\n\n    //读取存档\n    loadUserData: function (key) {\n        var cipherText = cc.sys.localStorage.getItem(key);\n        return cipherText == null ? null : JSON.parse(encrypt.decrypt(cipherText, secretkey, 256));\n    },\n\n    //设置存档\n    setUserData: function (key, value) {\n        var dataString = JSON.stringify(value);\n        var encrypted = encrypt.encrypt(dataString, secretkey, 256);\n        cc.sys.localStorage.setItem(key, encrypted);\n    },\n\n    //检查存档值数据\n    checkUserData: function (key, value) {\n        return Utils.loadUserData(key) == value ? true : false;\n    },\n\n    //获取当前时间戳\n    getTimestamp: function () {\n        return Date.parse(new Date()) / 1000;\n    },\n\n    //添加简单阴影效果 网页版不可用\n    addShadow: function (preNode, diffX = -1, diffY = 1) {\n        if(cc.sys.isBrowser)\n        {\n            return null;\n        }\n        var lblBool = preNode.getComponent(cc.Label);\n        var richBool = preNode.getComponent(cc.RichText);\n        var cloneNode = new cc.Node();\n        var type;\n        if (lblBool) {\n            type = cc.Label;\n        }\n        else if (richBool) {\n            type = cc.RichText;   \n        }\n        if (cloneNode) {\n            cloneNode.addComponent(type);\n            cloneNode.getComponent(type).string = preNode.getComponent(type).string;\n            cloneNode.getComponent(type).fontSize = preNode.getComponent(type).fontSize;\n\n            cloneNode.parent = preNode.node.parent;\n            cloneNode.color = cc.Color.BLACK;\n            cloneNode.zIndex = preNode.node.zIndex - 1;\n            cloneNode.setAnchorPoint(preNode.node.anchorX,preNode.node.anchorY);\n            cloneNode.setPosition(preNode.node.x + preNode.diffX,preNode.node.y + preNode.diffY);\n            return cloneNode;\n        }\n    },\n\n    generateUUID: function() {\n        var d = new Date().getTime();\n        var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n          var r = (d + Math.random()*16)%16 | 0;\n          d = Math.floor(d/16);\n          return (c=='x' ? r : (r&0x3|0x8)).toString(16);\n        });\n        return uuid;\n    },\n\n    captureScreen: function (width,height,node) {\n        //注意，EditBox，VideoPlayer，Webview 等控件无法被包含在截图里面\n        //因为这是 OpenGL 的渲染到纹理的功能，上面提到的控件不是由引擎绘制的\n\n        if(CC_JSB) {\n            //如果待截图的场景中含有 mask，请使用下面注释的语句来创建 renderTexture\n            // var renderTexture = cc.RenderTexture.create(1280,640, cc.Texture2D.PIXEL_FORMAT_RGBA8888, gl.DEPTH24_STENCIL8_OES);\n            var renderTexture = cc.RenderTexture.create(width,height);\n\n            //实际截屏的代码\n            renderTexture.begin();\n            //this.richText.node 是我们要截图的节点，如果要截整个屏幕，可以把 this.richText 换成 Canvas 切点即可\n            node._sgNode.visit();\n            renderTexture.end();\n            renderTexture.saveToFile(\"demo.png\",cc.ImageFormat.PNG, true, function () {\n                cc.log(\"capture screen successfully!\");\n            });\n            //打印截图路径\n            //cc.log(jsb.fileUtils.getWritablePath());\n        }\n    }\n};"]}